---

# Runs the build based on the provided files in test.yml
name: build-packages

on:
  workflow_call:
    inputs:
      build_arch:
        required: false
        type: string
        default: 'x86_64'
  workflow_dispatch:
    inputs:
      build_arch:
        type: choice
        description: Build architecture
        default: 'x86_64'
        options:
          - all
          - x86_64
          - arm64

jobs:
  setup-build-matrix:
    uses: ./.github/workflows/build-arch-matrix-generator.yml
    with:
      build_arch: ${{ inputs.build_arch }}

  build-packages:
    name: build-packages
    runs-on: ubuntu-latest
    needs: setup-build-matrix
    timeout-minutes: 300
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-build-matrix.outputs.matrix-combinations) }}
    env:
      BUILD_ARCHITECTURE: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: package-parts-linux-x86-64
          path: agent/native/_build/${{ matrix.arch }}-release/
      - name: Build packages
        run: |
          docker run --rm \
           -e ELASTIC_OTEL_PHP_VERSION=1.0.0 \
           -e ELASTIC_OTEL_PHP_PLATFORM="${{ matrix.arch }}" \
           -e ELASTIC_OTEL_PHP_ARCH="${{ matrix.goarch }}" \
           -v ${PWD}:/source \
           -w /source/packaging goreleaser/nfpm package -f nfpm.yaml ${{ matrix.packages }}

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: package-parts-${{ matrix.arch }}
      #     path: |
      #       prod/native/_build/${{ matrix.arch }}-release/ext/elastic_apm*.so
      #       prod/native/_build/${{ matrix.arch }}-release/ext/elastic_apm*.debug
      #       prod/native/_build/${{ matrix.arch }}-release/loader/code/elastic_apm_loader.so
      #       prod/native/_build/${{ matrix.arch }}-release/loader/code/elastic_apm_loader.debug
