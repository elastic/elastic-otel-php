---

# Runs the build based on the provided files in test.yml
name: build-packages

on:
  workflow_call:
    inputs:
      build_arch:
        required: false
        type: string
        default: 'x86_64'
  workflow_dispatch:
    inputs:
      build_arch:
        type: choice
        description: Build architecture
        default: 'x86_64'
        options:
          - all
          - x86_64
          - arm64

jobs:
  setup-build-matrix:
    uses: ./.github/workflows/build-arch-matrix-generator.yml
    with:
      build_arch: ${{ inputs.build_arch }}

  build-packages:
    name: build-packages
    runs-on: ubuntu-latest
    needs: setup-build-matrix
    timeout-minutes: 300
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-build-matrix.outputs.matrix-combinations) }}
    env:
      BUILD_ARCHITECTURE: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package-parts-linux-x86-64
          path: prod/native/_build/${{ matrix.arch }}-release/
      - name: Build packages
        run: |
          mkdir -p "${PWD}/build/packages"
          packages=( ${{ matrix.packages }} )
          for pkg in "${packages[@]}"
          do
            docker run --rm \
               -e ELASTIC_OTEL_PHP_VERSION=1.0.0 \
               -e ELASTIC_OTEL_PHP_PLATFORM="${{ matrix.arch }}" \
               -e ELASTIC_OTEL_PHP_ARCH="${{ matrix.goarch }}" \
               -e ELASTIC_OTEL_PHP_GIT_SHA=$( git rev-parse HEAD || echo "unknown") \
               -v ${PWD}:/source \
               -w /source/packaging goreleaser/nfpm package -f nfpm.yaml -t "/source/build/packages" -p ${pkg} | tee /tmp/nfpm_output.txt

            PKG_FILENAME=$(grep "created package: " /tmp/nfpm_output.txt | sed 's/^.*: \/source\/build\/packages\///')
            # create sha512 file
            pushd "${PWD}/build/packages"
            md5sum "${PKG_FILENAME}" >"${PKG_FILENAME}".sha512
            popd
          done

          echo "Creating debug symbols artifacts"
          DBGSYM="${PWD}/build/packages/elastic-otel-php-debugsymbols-${{ matrix.arch }}.tar.gz"
          tar -czf ${DBGSYM} prod/native/_build/${{ matrix.arch }}-release/loader/code/elastic_apm_loader.debug prod/native/_build/${{ matrix.arch }}-release/ext/*.debug
          pushd "${PWD}/build/packages"
          md5sum ${DBGSYM} >${DBGSYM}.sha512
          popd
      - uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            build/packages/*
