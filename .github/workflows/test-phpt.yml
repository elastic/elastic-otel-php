---

# Runs the build based on the provided files in test.yml
name: build

on:
  workflow_call:
    inputs:
      build_arch:
        required: false
        type: string
        default: 'x86_64'
  workflow_dispatch:
    inputs:
      build_arch:
        type: choice
        description: Build architecture
        default: 'x86_64'
        options:
          - all
          - x86_64
          - arm64

jobs:
  setup-build-matrix:
    uses: ./.github/workflows/build-arch-matrix-generator.yml
    with:
      build_arch: ${{ inputs.build_arch }}

  test-phpt:
    name: test-phpt
    runs-on: ubuntu-latest
    needs: setup-build-matrix
    timeout-minutes: 300
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-build-matrix.outputs.matrix-combinations) }}
    env:
      BUILD_ARCHITECTURE: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-native-${{ matrix.arch }}
          path: prod/native/_build/${{ matrix.arch }}-release/
      - if: ${{ matrix.run_qemu }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Run phpt tests
        run: |
          uname -a
          echo "Arch: ${BUILD_ARCHITECTURE}"
          pushd prod/native/extension/phpt

          mkdir ${PWD}/results

          PHP_VERSIONS=( 80 81 82 83 )

          for PHP_VERSION in "${PHP_VERSIONS[@]}"
          do
            ./run.sh -b ${BUILD_ARCHITECTURE} -p ${PHP_VERSION} -f ${PWD}/results/phpt-${PHP_VERSION}.tar.gz || TEST_ERROR=1
          done
          popd

          if [ $TEST_ERROR -eq 1 ]; then
            echo "Some tests failed"
            exit 1
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: test-phpt-failures-${{ matrix.arch }}
          if: failure()
          path: |
            prod/native/extension/phpt/results/*
  